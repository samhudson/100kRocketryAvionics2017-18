\documentclass[onecolumn, draftclsnofoot,10pt, compsoc]{IEEEtran}
\usepackage{graphicx}
\usepackage{url}
\usepackage{setspace}

\usepackage{geometry}
\geometry{textheight=9.5in, textwidth=7in}

\def \CapstoneTeamName{		100k Challenge CS}
\def \CapstoneTeamNumber{		42}
\def \GroupMemberOne{			Glenn Upthagrove}
\def \GroupMemberTwo{		 	Sam Hudson}
\def \GroupMemberThree{			Michael Elliott}
\def \CapstoneProjectName{		100K Spaceport America Demonstration Rocket Project}
\def \CapstoneSponsorCompany{	School of Mechanical Engineering, Oregon State University}
\def \CapstoneSponsorPerson{		Nancy Squires}

% 2. Uncomment the appropriate line below so that the document type works
\def \DocType{  %Problem Statement
				%Requirements Document
				Technology Review
				%Design Document
				%Progress Report
				}
			
\newcommand{\NameSigPair}[1]{\par
\makebox[2.75in][r]{#1} \hfil 	\makebox[3.25in]{\makebox[2.25in]{\hrulefill} \hfill		\makebox[.75in]{\hrulefill}}
\par\vspace{-12pt} \textit{\tiny\noindent
\makebox[2.75in]{} \hfil		\makebox[3.25in]{\makebox[2.25in][r]{Signature} \hfill	\makebox[.75in][r]{Date}}}}
% 3. If the document is not to be signed, uncomment the RENEWcommand below
%\renewcommand{\NameSigPair}[1]{#1}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\begin{document}
\begin{titlepage}
    \pagenumbering{gobble}
    \begin{singlespace}
    	\includegraphics[height=4cm]{coe_v_spot1}
        \hfill 
        % 4. If you have a logo, use this includegraphics command to put it on the coversheet.
        %\includegraphics[height=4cm]{CompanyLogo}   
        \par\vspace{.2in}
        \centering
        \scshape{
            \huge CS Capstone \DocType \par
            {\large\today}\par
            \vspace{.5in}
            \textbf{\Huge\CapstoneProjectName}\par
            \vfill
            {\large Prepared for}\par
            \Huge \CapstoneSponsorCompany\par
            \vspace{5pt}
            {\Large\NameSigPair{\CapstoneSponsorPerson}\par}
            {\large Prepared by }\par
            Group\CapstoneTeamNumber\par
            % 5. comment out the line below this one if you do not wish to name your team
            \CapstoneTeamName\par 
            \vspace{5pt}
            {\Large
                \NameSigPair{\GroupMemberOne}\par
                \NameSigPair{\GroupMemberTwo}\par
                \NameSigPair{\GroupMemberThree}\par
            }
            \vspace{20pt}
        }
        \begin{abstract}
        % 6. Fill in your abstract    
        This document will review technologies that will be considered for use in the design and execution of our final product. 
	\end{abstract}     
    \end{singlespace}
\end{titlepage}
\newpage
\pagenumbering{arabic}
\tableofcontents
% 7. uncomment this (if applicable). Consider adding a page break.
%\listoffigures
%\listoftables
\clearpage

\section{Visualization}
\subsection{Chart JS}
Chart JS is an open source JavaScript charting tool. Chart JS is highly responsive and offers 8 robust chart types with many different customizations. Chart JS utilizes the Canvas element in HTML5 meaning it’s cross compatible and has a great deal of performance.  
\subsection{Plotly JS}
Plotly JS is an open source JavaScript charting tool that supports over 20 different types of charts. Plotly JS is built on Javascript D3 which is a powerful monolithic data visualization framework that integrates with a client’s graphics card for robust rendering. 
\subsection{Flotcharts}
Flotcharts is a JavaScript plotting library for jQuery with portability and simplicity in mind.
Flotcharts aim is provide interactive features that are supported by many different browser types including Internet Explorer 6+. 
\subsection{Conclusion}
In conclusion I would say that Chart JS would be the best contender for what we require. This is  a simplistic yet modern charting framework. I feel Plotly JS has a lot of great features but it’s more features than we require for this project. Chart JS just the right amount of features and is compatible with many different browsers. Flotcharts is a good tool for running on websites that require compatibility with older browsers. The best option for this project is the Chart JS visualization framework.

\section{Frontend Web Frameworks}
\subsection{Materialize}
Materialize is a responsive frontend framework built by Google. Materialize offers a consistent design experience with many different exciting features such as cards, chips and popouts. The design is very appealing and the framework makes it easy to append and change existing style classifications. 
\subsection{Bootstrap}
Bootstrap is one of the more popular frontend frameworks built. It supports cool features such as input groups and modals. Although, I feel as this framework is so robust it’s harder to append and change style classifications. However, there’s a great deal of refinement and support as it’s a widely used product. 
\subsection{Semantic-UI}
Semantic UI is another awesome open source frontend framework. One great feature that Semantic UI offers is packaged Gulp build tools so projects can preserve their own theme changes. Semantic UI integrates well with the server-side framework Node JS and is highly portable. 
\subsection{Conclusion}
In conclusion I feel that Materialize is the best option for this project. Materialize is a great lightweight frontend framework that is highly portable and integratable. Although Bootstrap and Semantic UI offer a great deal of features I feel that materialize offers features that make for a better looking interface.
\section{Server-side Web Frameworks}
\subsection{Flask}
Flask is a microframework for Python that includes useful templating frameworks and a built in web server. One good part of flask is that it’s a microframework meaning that it’s lightweight and simplistic in nature. Flask has a nice concise way of handling routing.
\subsection{Ruby on Rails}
Ruby on Rails is powerful web framework for Ruby. It’s standalone in terms of a web server includes many awesome features. These include advanced routing, extensions on MVC and a ton of plugins. I wouldn’t say Ruby on Rails is lightweight but it’s powerful.
\subsection{Express JS}
Express is a flexible web framework designed integrate seamlessly with the javascript runtime environment node js. Express provides a good for lightweight applications and has a thin layer of web application abstracting away a lot of complexities in presentation and business logic.
\subsection{Conclusion}
Flask is best backend framework for the job. Flask is lightweight and has a basic web server and debugger. Flask makes routing and templating extremely simple. One great aspect of Flask is that it’s a microframework so it’s lightweight and doesn’t have a lot of features that would tie it down and reduce performance. For this project Flask is best Server-side framework.

\section{References}
\begin{enumerate}
\item http://www.chartjs.org/
\item https://plot.ly/javascript/
\item http://www.flotcharts.org/
\item http://getbootstrap.com/
\item https://semantic-ui.com/
\item http://materializecss.com/
\item https://expressjs.com/
\item http://flask.pocoo.org/
\item http://rubyonrails.org/ 
 \end{enumerate}


\includegraphics[width=\textwidth,height=\textheight]{gantt}

\end{document}
